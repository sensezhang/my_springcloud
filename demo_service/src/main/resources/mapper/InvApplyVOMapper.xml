<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonyou.cloud.demo.repository.InvApplyVOMapper">
  <resultMap id="BaseResultMap" type="com.yonyou.cloud.demo.entity.InvApplyVO">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="fpqqlsh" jdbcType="VARCHAR" property="fpqqlsh"/>
    <result column="einvoice_code" jdbcType="VARCHAR" property="einvoiceCode"/>
    <result column="einvoice_number" jdbcType="VARCHAR" property="einvoiceNumber"/>
    <result column="random_number" jdbcType="VARCHAR" property="randomNumber"/>
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount"/>
    <result column="issue_date" jdbcType="DATE" property="issueDate"/>
    <result column="payer_party_name" jdbcType="VARCHAR" property="payerPartyName"/>
    <result column="remark" jdbcType="VARCHAR" property="remark"/>
    <result column="handling_person" jdbcType="VARCHAR" property="handlingPerson"/>
    <result column="status_code" jdbcType="SMALLINT" property="statusCode"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="ts" jdbcType="TIMESTAMP" property="ts"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <if test="criteria.orcriteria.size() != 0">
              and
              <trim prefix="(" prefixOverrides="or" suffix=")">
                <foreach collection="criteria.orcriteria" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                      or ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      or ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      or (${criterion.condition} #{criterion.value} and #{criterion.secondValue})
                    </when>
                    <when test="criterion.listValue">
                      or ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="("
                        separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `fpqqlsh`, `einvoice_code`, `einvoice_number`, `random_number`, `total_amount`, `issue_date`, `payer_party_name`, `remark`, `handling_person`, `status_code`, `create_time`, `ts`
  </sql>
  <select id="selectByExample" parameterType="com.yonyou.cloud.demo.entity.InvApplyVOExample"
    resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <if
      test="example != null and example.selectFields != null and example.selectFields.size() != 0">
      <foreach collection="example.selectFields" index="index" item="item" separator=",">
        ${item}
      </foreach>
    </if>
    <if test="example == null or example.selectFields == null or example.selectFields.size() == 0">
      <include refid="Base_Column_List"/>
    </if>
    from inv_apply
    <if test="example != null">
      <include refid="Example_Where_Clause"/>
      <if test="example.orderByClause != null">
        order by ${example.orderByClause}
      </if>
      <if test="example.startPos != null and example.pageSize != null">
        limit #{example.startPos}, #{example.pageSize}
      </if>
    </if>

  </select>
  <select id="selectById" resultMap="BaseResultMap">
    select
    <if
      test="example != null and example.selectFields != null and example.selectFields.size() != 0">
      <foreach collection="example.selectFields" index="index" item="item" separator=",">
        ${item}
      </foreach>
    </if>
    <if test="example == null or example.selectFields == null or example.selectFields.size() == 0">
      <include refid="Base_Column_List"/>
    </if>
    from inv_apply
    where `id`=#{id}
  </select>
  <delete id="deleteByExample" parameterType="com.yonyou.cloud.demo.entity.InvApplyVOExample">
    delete from inv_apply
    <include refid="Example_Where_Clause"/>
  </delete>
  <insert id="insert" parameterType="com.yonyou.cloud.demo.entity.InvApplyVO"
    useGeneratedKeys="true" keyProperty="id">
    insert into inv_apply (`fpqqlsh`, `einvoice_code`, `einvoice_number`, `random_number`, `total_amount`, `payer_party_name`, `remark`, `handling_person`, `status_code`)
    values (#{fpqqlsh,jdbcType=VARCHAR}, #{einvoiceCode,jdbcType=VARCHAR}, #{einvoiceNumber,jdbcType=VARCHAR}, #{randomNumber,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DECIMAL}, #{payerPartyName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{handlingPerson,jdbcType=VARCHAR}, #{statusCode,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.cloud.demo.entity.InvApplyVO"
    useGeneratedKeys="true" keyProperty="id">
    insert into inv_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fpqqlsh != null">
        `fpqqlsh`,
      </if>
      <if test="einvoiceCode != null">
        `einvoice_code`,
      </if>
      <if test="einvoiceNumber != null">
        `einvoice_number`,
      </if>
      <if test="randomNumber != null">
        `random_number`,
      </if>
      <if test="totalAmount != null">
        `total_amount`,
      </if>
      <if test="payerPartyName != null">
        `payer_party_name`,
      </if>
      <if test="remark != null">
        `remark`,
      </if>
      <if test="handlingPerson != null">
        `handling_person`,
      </if>
      <if test="statusCode != null">
        `status_code`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fpqqlsh != null">
        #{fpqqlsh,jdbcType=VARCHAR},
      </if>
      <if test="einvoiceCode != null">
        #{einvoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="einvoiceNumber != null">
        #{einvoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="randomNumber != null">
        #{randomNumber,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="payerPartyName != null">
        #{payerPartyName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="handlingPerson != null">
        #{handlingPerson,jdbcType=VARCHAR},
      </if>
      <if test="statusCode != null">
        #{statusCode,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <insert id="insertInvApplyVOList" parameterType="java.util.List" useGeneratedKeys="true"
    keyProperty="id">
    insert into inv_apply (`fpqqlsh`, `einvoice_code`, `einvoice_number`, `random_number`,
    `total_amount`, `payer_party_name`, `remark`, `handling_person`, `status_code`)

    values
    <foreach collection="list" item="item" separator=",">
      (
      #{item.fpqqlsh,jdbcType=VARCHAR},
      #{item.einvoiceCode,jdbcType=VARCHAR},
      #{item.einvoiceNumber,jdbcType=VARCHAR},
      #{item.randomNumber,jdbcType=VARCHAR},
      #{item.totalAmount,jdbcType=DECIMAL},
      #{item.payerPartyName,jdbcType=VARCHAR},
      #{item.remark,jdbcType=VARCHAR},
      #{item.handlingPerson,jdbcType=VARCHAR},
      #{item.statusCode,jdbcType=SMALLINT} )
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.cloud.demo.entity.InvApplyVOExample"
    resultType="java.lang.Integer">
    select count(*) from inv_apply
    <if test="example != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective">
    update inv_apply
    <set>
      <if test="record.fpqqlsh != null">
        `fpqqlsh` = #{record.fpqqlsh,jdbcType=VARCHAR},
      </if>
      <if test="record.einvoiceCode != null">
        `einvoice_code` = #{record.einvoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.einvoiceNumber != null">
        `einvoice_number` = #{record.einvoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.randomNumber != null">
        `random_number` = #{record.randomNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        `total_amount` = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.issueDate != null">
        `issue_date` = #{record.issueDate,jdbcType=DATE},
      </if>
      <if test="record.payerPartyName != null">
        `payer_party_name` = #{record.payerPartyName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        `remark` = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.handlingPerson != null">
        `handling_person` = #{record.handlingPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.statusCode != null">
        `status_code` = #{record.statusCode,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <include refid="Update_By_Example_Where_Clause"/>
  </update>
  <update id="updateByExample" parameterType="map">
    update inv_apply
    set
    `id` = #{record.id,jdbcType=BIGINT},
    `fpqqlsh` = #{record.fpqqlsh,jdbcType=VARCHAR},
    `einvoice_code` = #{record.einvoiceCode,jdbcType=VARCHAR},
    `einvoice_number` = #{record.einvoiceNumber,jdbcType=VARCHAR},
    `random_number` = #{record.randomNumber,jdbcType=VARCHAR},
    `total_amount` = #{record.totalAmount,jdbcType=DECIMAL},
    `issue_date` = #{record.issueDate,jdbcType=DATE},
    `payer_party_name` = #{record.payerPartyName,jdbcType=VARCHAR},
    `remark` = #{record.remark,jdbcType=VARCHAR},
    `handling_person` = #{record.handlingPerson,jdbcType=VARCHAR},
    `status_code` = #{record.statusCode,jdbcType=SMALLINT},
    `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
    <include refid="Update_By_Example_Where_Clause"/>
  </update>
  <update id="updateInvApplyVOList" parameterType="java.util.List">
    <if test="example != null and example.updateFields.size != 0">
      insert into inv_apply (<include refid="Base_Column_List"/>)
      values
      <foreach collection="recordList" item="item" separator=",">
        (#{item.id,jdbcType=BIGINT},#{item.fpqqlsh,jdbcType=VARCHAR},#{item.einvoiceCode,jdbcType=VARCHAR},#{item.einvoiceNumber,jdbcType=VARCHAR},#{item.randomNumber,jdbcType=VARCHAR},#{item.totalAmount,jdbcType=DECIMAL},#{item.issueDate,jdbcType=DATE},#{item.payerPartyName,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR},#{item.handlingPerson,jdbcType=VARCHAR},#{item.statusCode,jdbcType=SMALLINT},#{item.createTime,jdbcType=TIMESTAMP},#{item.ts,jdbcType=TIMESTAMP})
      </foreach>
      on duplicate key update
      <foreach collection="example.updateFields" item="item" separator=",">
        `${item}`=values(`${item}`)
      </foreach>
    </if>
    <if test="example == null or example.updateFields.size == 0">
      replace into inv_apply (<include refid="Base_Column_List"/>)
      values
      <foreach collection="recordList" item="item" separator=",">
        (#{item.fpqqlsh,jdbcType=VARCHAR},#{item.einvoiceCode,jdbcType=VARCHAR},#{item.einvoiceNumber,jdbcType=VARCHAR},#{item.randomNumber,jdbcType=VARCHAR},#{item.totalAmount,jdbcType=DECIMAL},#{item.payerPartyName,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR},#{item.handlingPerson,jdbcType=VARCHAR},#{item.statusCode,jdbcType=SMALLINT})
      </foreach>
    </if>
  </update>
</mapper>