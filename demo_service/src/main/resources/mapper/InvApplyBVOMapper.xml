<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonyou.cloud.demo.repository.InvApplyBVOMapper">
  <resultMap id="BaseResultMap" type="com.yonyou.cloud.demo.entity.InvApplyBVO">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="hid" jdbcType="BIGINT" property="hid"/>
    <result column="item_code" jdbcType="VARCHAR" property="itemCode"/>
    <result column="item_name" jdbcType="VARCHAR" property="itemName"/>
    <result column="item_amount" jdbcType="DECIMAL" property="itemAmount"/>
    <result column="item_unit" jdbcType="VARCHAR" property="itemUnit"/>
    <result column="item_quantity" jdbcType="INTEGER" property="itemQuantity"/>
    <result column="item_std" jdbcType="DECIMAL" property="itemStd"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="ts" jdbcType="TIMESTAMP" property="ts"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <if test="criteria.orcriteria.size() != 0">
              and
              <trim prefix="(" prefixOverrides="or" suffix=")">
                <foreach collection="criteria.orcriteria" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                      or ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      or ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      or (${criterion.condition} #{criterion.value} and #{criterion.secondValue})
                    </when>
                    <when test="criterion.listValue">
                      or ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="("
                        separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.andcriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `hid`, `item_code`, `item_name`, `item_amount`, `item_unit`, `item_quantity`, `item_std`, `create_time`, `ts`
  </sql>
  <select id="selectByExample" parameterType="com.yonyou.cloud.demo.entity.InvApplyBVOExample"
    resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <if
      test="example != null and example.selectFields != null and example.selectFields.size() != 0">
      <foreach collection="example.selectFields" index="index" item="item" separator=",">
        ${item}
      </foreach>
    </if>
    <if test="example == null or example.selectFields == null or example.selectFields.size() == 0">
      <include refid="Base_Column_List"/>
    </if>
    from inv_apply_b
    <if test="example != null">
      <include refid="Example_Where_Clause"/>
      <if test="example.orderByClause != null">
        order by ${example.orderByClause}
      </if>
      <if test="example.startPos != null and example.pageSize != null">
        limit #{example.startPos}, #{example.pageSize}
      </if>
    </if>

  </select>
  <select id="selectById" resultMap="BaseResultMap">
    select
    <if
      test="example != null and example.selectFields != null and example.selectFields.size() != 0">
      <foreach collection="example.selectFields" index="index" item="item" separator=",">
        ${item}
      </foreach>
    </if>
    <if test="example == null or example.selectFields == null or example.selectFields.size() == 0">
      <include refid="Base_Column_List"/>
    </if>
    from inv_apply_b
    where `id`=#{id}
  </select>
  <delete id="deleteByExample" parameterType="com.yonyou.cloud.demo.entity.InvApplyBVOExample">
    delete from inv_apply_b
    <include refid="Example_Where_Clause"/>
  </delete>
  <insert id="insert" parameterType="com.yonyou.cloud.demo.entity.InvApplyBVO"
    useGeneratedKeys="true" keyProperty="id">
    insert into inv_apply_b (`hid`, `item_code`, `item_name`, `item_amount`, `item_unit`, `item_quantity`, `item_std`)
    values (#{hid,jdbcType=BIGINT}, #{itemCode,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemAmount,jdbcType=DECIMAL}, #{itemUnit,jdbcType=VARCHAR}, #{itemQuantity,jdbcType=INTEGER}, #{itemStd,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.cloud.demo.entity.InvApplyBVO"
    useGeneratedKeys="true" keyProperty="id">
    insert into inv_apply_b
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hid != null">
        `hid`,
      </if>
      <if test="itemCode != null">
        `item_code`,
      </if>
      <if test="itemName != null">
        `item_name`,
      </if>
      <if test="itemAmount != null">
        `item_amount`,
      </if>
      <if test="itemUnit != null">
        `item_unit`,
      </if>
      <if test="itemQuantity != null">
        `item_quantity`,
      </if>
      <if test="itemStd != null">
        `item_std`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hid != null">
        #{hid,jdbcType=BIGINT},
      </if>
      <if test="itemCode != null">
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemAmount != null">
        #{itemAmount,jdbcType=DECIMAL},
      </if>
      <if test="itemUnit != null">
        #{itemUnit,jdbcType=VARCHAR},
      </if>
      <if test="itemQuantity != null">
        #{itemQuantity,jdbcType=INTEGER},
      </if>
      <if test="itemStd != null">
        #{itemStd,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <insert id="insertInvApplyBVOList" parameterType="java.util.List" useGeneratedKeys="true"
    keyProperty="id">
    insert into inv_apply_b (`hid`, `item_code`, `item_name`, `item_amount`, `item_unit`,
    `item_quantity`, `item_std`)

    values
    <foreach collection="list" item="item" separator=",">
      (
      #{item.hid,jdbcType=BIGINT},
      #{item.itemCode,jdbcType=VARCHAR},
      #{item.itemName,jdbcType=VARCHAR},
      #{item.itemAmount,jdbcType=DECIMAL},
      #{item.itemUnit,jdbcType=VARCHAR},
      #{item.itemQuantity,jdbcType=INTEGER},
      #{item.itemStd,jdbcType=DECIMAL} )
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.cloud.demo.entity.InvApplyBVOExample"
    resultType="java.lang.Integer">
    select count(*) from inv_apply_b
    <if test="example != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective">
    update inv_apply_b
    <set>
      <if test="record.hid != null">
        `hid` = #{record.hid,jdbcType=BIGINT},
      </if>
      <if test="record.itemCode != null">
        `item_code` = #{record.itemCode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemName != null">
        `item_name` = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemAmount != null">
        `item_amount` = #{record.itemAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.itemUnit != null">
        `item_unit` = #{record.itemUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.itemQuantity != null">
        `item_quantity` = #{record.itemQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.itemStd != null">
        `item_std` = #{record.itemStd,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <include refid="Update_By_Example_Where_Clause"/>
  </update>
  <update id="updateByExample" parameterType="map">
    update inv_apply_b
    set
    `id` = #{record.id,jdbcType=BIGINT},
    `hid` = #{record.hid,jdbcType=BIGINT},
    `item_code` = #{record.itemCode,jdbcType=VARCHAR},
    `item_name` = #{record.itemName,jdbcType=VARCHAR},
    `item_amount` = #{record.itemAmount,jdbcType=DECIMAL},
    `item_unit` = #{record.itemUnit,jdbcType=VARCHAR},
    `item_quantity` = #{record.itemQuantity,jdbcType=INTEGER},
    `item_std` = #{record.itemStd,jdbcType=DECIMAL},
    `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
    <include refid="Update_By_Example_Where_Clause"/>
  </update>
  <update id="updateInvApplyBVOList" parameterType="java.util.List">
    <if test="example != null and example.updateFields.size != 0">
      insert into inv_apply_b (<include refid="Base_Column_List"/>)
      values
      <foreach collection="recordList" item="item" separator=",">
        (#{item.id,jdbcType=BIGINT},#{item.hid,jdbcType=BIGINT},#{item.itemCode,jdbcType=VARCHAR},#{item.itemName,jdbcType=VARCHAR},#{item.itemAmount,jdbcType=DECIMAL},#{item.itemUnit,jdbcType=VARCHAR},#{item.itemQuantity,jdbcType=INTEGER},#{item.itemStd,jdbcType=DECIMAL},#{item.createTime,jdbcType=TIMESTAMP},#{item.ts,jdbcType=TIMESTAMP})
      </foreach>
      on duplicate key update
      <foreach collection="example.updateFields" item="item" separator=",">
        `${item}`=values(`${item}`)
      </foreach>
    </if>
    <if test="example == null or example.updateFields.size == 0">
      replace into inv_apply_b (<include refid="Base_Column_List"/>)
      values
      <foreach collection="recordList" item="item" separator=",">
        (#{item.hid,jdbcType=BIGINT},#{item.itemCode,jdbcType=VARCHAR},#{item.itemName,jdbcType=VARCHAR},#{item.itemAmount,jdbcType=DECIMAL},#{item.itemUnit,jdbcType=VARCHAR},#{item.itemQuantity,jdbcType=INTEGER},#{item.itemStd,jdbcType=DECIMAL})
      </foreach>
    </if>
  </update>
</mapper>